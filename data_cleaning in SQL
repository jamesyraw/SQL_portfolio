-- creating the tables i'll need

DROP TABLE IF EXISTS demographics;

CREATE TABLE demographics (
  	responseID INT NOT NULL,
  	age varchar(20),
  	country VARCHAR(255),
  	state VARCHAR(255),
  	city VARCHAR(255),
  	education VARCHAR(255),
  	gender VARCHAR(255),
  	race VARCHAR(255),
  PRIMARY KEY (responseid)
  );
  
DROP TABLE IF EXISTS professions;
 
CREATE TABLE professions (
  	responseid INT NOT NULL,
   	industry VARCHAR(255),
   	job_title VARCHAR(255),
   	addl_context VARCHAR(255),
   	salary INT,
   	addl_compensation VARCHAR(255),
   	currency VARCHAR(255),
   	currency_other VARCHAR(255),
   	income_context VARCHAR (255),
   	professional_exp VARCHAR (255),
   	field_exp VARCHAR (255),
  PRIMARY KEY (responseid)
   );

-- dropping the context based columns, as they aren't going to be useful for these purposes
   
CREATE TABLE professions_new (
  	responseid INT NOT NULL,
  	industry VARCHAR(255),
  	job_title VARCHAR(255),
  	salary INT,
  	addl_compensation VARCHAR(255),
	currency VARCHAR(255),
   	currency_other VARCHAR(255),
   	professional_exp VARCHAR (255),
   	field_exp VARCHAR (255),
  PRIMARY KEY (responseid)
  );
  
INSERT INTO professions_new
SELECT responseid, industry, job_title, salary, addl_compensation, currency, currency_other, professional_exp, field_exp
FROM professions;

-- renaming the _new table back to the original name

DROP TABLE professions;

ALTER TABLE professions_new RENAME TO professions;

-- viewing the raw data starting with the demographics table

SELECT * FROM demographics;

-- basic cleaning of the country column such as standardizing case, trimming whitespace, and removing none alpha characters I noticed

SELECT DISTINCT country
FROM demographics
ORDER BY country;

UPDATE demographics
SET country = TRIM(LOWER(country));

DELETE FROM demographics
WHERE country LIKE '%$%'
OR country LIKE '$3$';

-- Update to resolve long form answers
UPDATE demographics
SET country = CASE
	WHEN country LIKE '%new zealand%' THEN 'new zealand'
    WHEN country LIKE '%argentina%' THEN 'argentina'
    WHEN country LIKE '%australi%' THEN 'australia'
    WHEN country LIKE '%austria%' THEN 'austria'
    WHEN country LIKE '%canada%' THEN 'canada'
    WHEN country LIKE '%germany%' THEN 'germany'
    WHEN country LIKE '%englan%' THEN 'united kingdom'
    WHEN country LIKE '%united stat%' THEN 'united states'
    WHEN country LIKE '%romania%' THEN 'romania'
    WHEN country LIKE '%italy%' then 'italy'
    WHEN country LIKE '%japan%' THEN 'japan'
    WHEN country LIKE '%china%' THEN 'china'
    WHEN country LIKE '%northern ireland%' THEN 'united kingdom'
    WHEN country LIKE '%phillippines%' THEN 'phillippines'
    WHEN country LIKE '%scotland%' THEN 'united kingdom'
    WHEN country LIKE '%america%' THEN 'united states'
    WHEN country LIKE '%britain%' THEN 'united kingdom'
    WHEN country LIKE '%u.%s.%' THEN 'united states'
    WHEN country LIKE '%state%' THEN 'united states'
    WHEN country LIKE '%wales%' THEN 'united kingdom'
    WHEN country LIKE '%canad%' THEN 'canada'
    WHEN country LIKE '%ted s%' THEN 'united states'
    ELSE country 
    END;

-- mapping data to a new table

CREATE TABLE country_mapping (
    raw_country TEXT,
    standardized_country TEXT
);

INSERT INTO country_mapping (raw_country, standardized_country)
VALUES
    ('afghanistan', 'Afghanistan'),
    ('argentina', 'Argentina'),
    ('australia', 'Australia'),
    ('austria', 'Austria'),
    ('bahamas', 'Bahamas'),
    ('bermuda', 'Bermuda'),
    ('belgium', 'Belgium'),
    ('bosnia', 'Bosnia'),
    ('d.r. of the congo', 'D.R. of the Congo'),
    ('ivory coast', 'Ivory Coast'),
    ('panama', 'Panama'),
    ('philippines', 'The Phillippines'),
    ('bangladesh', 'Bangladesh'),
    ('bosnia and herzegovina', 'Bosnia'),
    ('brasil', 'Brazil'),
    ('brazil', 'Brazil'),
    ('bulgaria', 'Bulgaria'),
    ('burma', 'Burma'),
    ('california', 'United States'),
    ('cambodia', 'Cambodia'),
    ('can', 'Canada'),
    ('canada', 'Canada'),
    ('canda', 'Canada'),
    ('catalonia', 'Spain'),
    ('cayman islands', 'United Kingdom'),
    ('chile', 'Chile'),
    ('china', 'China'),
    ('colombia', 'Colombia'),
    ('congo', 'D.R. of the Congo'),
    ('costa rica', 'Costa Rica'),
    ('cote d''ivoire', 'Ivory Coast'),
    ('croatia', 'Croatia'),
    ('csnada', 'Canada'),
    ('cuba', 'Cuba'),
    ('cyprus', 'Cyprus'),
    ('czech republic', 'Czechia'),
    ('czechia', 'Czechia'),
    ('danmark', 'Denmark'),
    ('denmark', 'Denmark'),
    ('ecuador','Ecuador'),
    ('eritrea', 'Eritrea'),
    ('estonia', 'Estonia'),
    ('finland', 'Finland'),
    ('france', 'France'),
    ('germany', 'Germany'),
    ('ghana', 'Ghana'),
    ('greece', 'Greece'),
    ('hong kong', 'Hong Kong'),
    ('hong konh', 'Hong Kong'),
    ('hungary', 'Hungary'),
    ('i work for a uae-based organization, though i am personally in the us.', 'United States'),
    ('ibdia', 'India'),
    ('india', 'India'),
    ('indonesia', 'Indonesia'),
    ('ireland', 'Ireland'),
    ('isle of man', 'United Kingdom'),
    ('israel', 'Israel'),
    ('italy', 'Italy'),
    ('jamaica', 'Jamaica'),
    ('japan', 'Japan'),
    ('jersey, channel islands', 'United Kingdom'),
    ('jordan', 'Jordan'),
    ('kenya', 'Kenya'),
    ('kuwait', 'Kuwait'),
    ('latvia', 'Latvia'),
    ('liechtenstein', 'Liechtenstein'),
    ('lithuania', 'Lithuania'),
    ('london', 'United Kingdom'),
    ('luxembourg', 'Luxembourg'),
    ('luxemburg', 'Luxembourg'),
    ('malaysia', 'Malaysia'),
    ('malta', 'Malta'),
    ('mexico', 'Mexico'),
    ('morocco', 'Morocco'),
    ('myanmar', 'Myanmar'),
    ('mÃ©xico', 'Mexico'),
    ('nederland', 'The Netherlands'),
    ('netherlands', 'The Netherlands'),
    ('new zealand', 'New Zealand'),
    ('nigeria', 'Nigeria'),
    ('norway', 'Norway'),
    ('nz', 'New Zealand'),
    ('pakistan', 'Pakistan'),
    ('panamÃ¡', 'Panama'),
    ('phillippines', 'The Phillippines'),
    ('poland', 'Poland'),
    ('portugal', 'Portugal'),
    ('puerto rico', 'United States'),
    ('qatar', 'Qatar'),
    ('remote (philippines)', 'The Phillippines'),
    ('romania', 'Romania'),
    ('russia', 'Russia'),
    ('rwanda', 'Rwanda'),
    ('san francisco', 'United States'),
    ('saudi arabia', 'Saudi Arabia'),
    ('serbia', 'Serbia'),
    ('sierra leone', 'Sierra Leone'),
    ('singapore', 'Singapore'),
    ('slovakia', 'Slovakia'),
    ('slovenia', 'Slovenia'),
    ('somalia', 'Somalia'),
    ('south africa', 'South Africa'),
    ('south korea', 'South Korea'),
    ('spain', 'Spain'),
    ('sri lanka', 'Sri Lanka'),
    ('sweden', 'Sweden'),
    ('switzerland', 'Switzerland'),
    ('taiwan', 'Taiwan'),
    ('tanzania', 'Tanzania'),
    ('thailand', 'Thailand'),
    ('the bahamas', 'Bahamas'),
    ('the netherlands', 'The Netherlands'),
    ('the us', 'United States'),
    ('trinidad and tobago', 'Trinidad and Tobago'),
    ('turkey', 'Turkey'),
    ('u. s', 'United States'),
    ('u.k', 'United Kingdom'),
    ('u.k.', 'United Kingdom'),
    ('u.s', 'United States'),
    ('u.s>', 'United States'),
    ('u.sa', 'United States'),
    ('uae', 'United Arab Emirates'),
    ('uganda', 'Uganda'),
    ('uk', 'United Kingdom'),
    ('uk, but for globally fully remote company', 'United Kingdom'),
    ('uk, remote', 'United Kingdom'),
    ('ukraine', 'Ukraine'),
    ('united arab emirates', 'United Arab Emirates'),
    ('united kindom', 'United Kingdom'),
    ('united kingdom', 'United Kingdom'),
    ('united kingdom.', 'United Kingdom'),
    ('united kingdomk', 'United Kingdom'),
    ('united states', 'United States'),
    ('unites kingdom', 'United Kingdom'),
    ('uruguay', 'Uruguay'),
    ('us', 'United States'),
    ('us govt employee overseas, country withheld', 'United States'),
    ('us of a', 'United States'),
    ('usa', 'United States'),
    ('usa (company is based in a us territory, i work remote)', 'United States'),
    ('usa tomorrow', 'United States'),
    ('usa, but for foreign gov''t', 'United States'),
    ('usa-- virgin islands', 'United States'),
    ('vietnam', 'Vietnam'),
    ('virginia', 'United States'),
    ('worldwide (based in us but short term trips aroudn the world)', 'United States'),
    ('zimbabwe', 'Zimbabwe'),
    ('ðŸ‡ºðŸ‡¸', 'United States');

-- Check the new table

SELECT * FROM country_mapping

-- Updating the country column using the country mapping table
   
UPDATE demographics
SET country = cm.standardized_country
FROM country_mapping cm
WHERE demographics.country = cm.raw_country;

-- Cleaning up the unknowns remaining 

UPDATE demographics
SET country = 'Unknown'
WHERE country IS NULL OR country NOT IN (select standardized_country FROM country_mapping); 

SELECT DISTINCT country
FROM demographics
ORDER BY country;

SELECT DISTINCT state,
COUNT(state)
FROM demographics
GROUP BY state
ORDER BY state;

-- Standardizing responses that list multiple states on the assumption that people list their primary work state first

UPDATE demographics
SET state = 
    CASE 
        WHEN INSTR(state, ',') > 0 THEN SUBSTR(state, 1, INSTR(state, ',') - 1)
        ELSE state
    END;
    
-- Removing empty entries 

UPDATE demographics
SET state = 
	CASE 
    	WHEN state = '' AND country = 'United States' THEN 'Unknown'
    	WHEN state = '' AND country != 'United States' THEN 'International'
    	ELSE state
   	END;
    
-- Verifying count is 53 (50 states, DC, international, and unknown)

SELECT COUNT(DISTINCT state)
FROM demographics

-- Cleaning the cities column, first viewing the raw data

SELECT DISTINCT(city), 
state,
COUNT(city)
FROM demographics
GROUP by state, city
ORDER BY state, city;

-- Start with basic cleaning (normalize case, trim extra whitespace, and remove punctuation) 

UPDATE demographics
SET city = TRIM(REPLACE(LOWER(city), '.', ''));

-- Standardizing commonly abbreviated terms (e.g. Saint/St, Fort/Ft, or Mount/Mt)

UPDATE demographics
SET city = REPLACE(city, 'fort', 'ft')
WHERE city LIKE 'fort %';

UPDATE demographics
SET city = REPLACE(city, 'saint', 'st')
WHERE city LIKE 'saint %';

UPDATE demographics
SET city = REPLACE(city, 'mount', 'mt')
WHERE city LIKE 'mount %';

-- Removing text before or after specific delimiters. 

SET city = 
    CASE 
        WHEN INSTR(city, ',') > 0 THEN SUBSTR(city, 1, INSTR(city, ',') - 1)
        WHEN INSTR(city, '(') > 0 THEN SUBSTR(city, 1, INSTR(city, '(') - 1)
        WHEN INSTR(city, '-') > 0 THEN SUBSTR(city, 1, INSTR(city, '-') - 1)
        WHEN INSTR(city, ' but ') > 0 THEN SUBSTR(city, 1, INSTR(city, ' but ') - 1)
        WHEN INSTR(city, '/') > 0 THEN SUBSTR(city, 1, INSTR(city, '/') - 1)
        ELSE city
    END;
    
UPDATE demographics
SET city = TRIM(SUBSTR(city, INSTR(LOWER(city), 'near') + 4))
WHERE city LIKE 'near%';

-- Removing non-city entries to a new 'unknown' city name
-- Starting with string entries

UPDATE demographics
SET city = 'unknown'
WHERE city LIKE '%6%'
   OR city LIKE '%prefer%'
   OR city LIKE '%answer%'
   OR city LIKE '%rural%'
   OR city LIKE '%too small%'
   OR city LIKE '%--%'
   OR city LIKE '%all over%'
   OR city LIKE '%decline%'
   OR city LIKE '%travel%'
   OR city LIKE '%identify%'
   OR city LIKE '%small city%'
   OR city LIKE '%redacted%'
   OR city LIKE '%a major%'
   OR city LIKE '% sorry%'
   OR city LIKE '%i work%'
   OR city LIKE 'can''t say%'
   OR city LIKE 'a %'
   OR city LIKE '% anon%'
   OR city LIKE '%100k%'
   OR city LIKE '%can''t%'
   OR city LIKE 'city %'
   OR city LIKE '%company %'
   OR city LIKE '%corp hq%'
   OR city LIKE '%dont want%'
   OR city LIKE '%approx%'
   OR city LIKE '%expat%'
   OR city LIKE '%few hours%'
   OR city LIKE '%employee%'
   OR city LIKE '%from home%'
   OR city LIKE '%full%remote%'
   OR city LIKE 'hq %'
   OR city LIKE 'i %'
   OR city LIKE 'i''m%'
   OR city LIKE 'job is%'
   OR city LIKE '%large metro%'
   OR city LIKE '%major metro%'
   OR city LIKE '%medium%'
   OR city LIKE 'my %'
   OR city LIKE 'northcentral %'
   OR city LIKE 'northeast %'
   OR city LIKE 'northern %'
   OR city LIKE 'northwest %'
   OR city LIKE 'not %'
   OR city LIKE 'one of%'
   OR city LIKE 'outside 5'
   OR city LIKE '%rather not%'
   OR city LIKE 'remote%' 
   OR city LIKE 'small %'
   OR city LIKE 'southeast %'
   OR city LIKE 'southern %'
   OR city LIKE 'southwest %'
   OR city LIKE '% suburb%'
   OR city LIKE 'tele%'
   OR city LIKE 'this %'
   OR city LIKE 'too %'
   OR city LIKE '% state'
   OR city LIKE 'western %'
   OR city LIKE 'wfh %'
   OR city LIKE 'work %'
   OR city LIKE 'would %'
   OR city LIKE 'x%';

-- Removing specific one-off instances

UPDATE demographics
SET city = 'unknown' 
WHERE city IN ('undisclosed','sorry', 'secret','see above','remove','other','no','no city','nope','.','g','fuck off','ff','confidential','at home','all of them','na','test','remote','n/a','none','various','wfh','home','small town','variety','full time remote employee', 'remote worker','s','','..','0000','12043')

-- Merging common city names, nicknames, abbreviations, and misspellings

UPDate demographics
SET city =
	CASE 
    	WHEN city LIKE 'aberdeen %' THEN 'aberdeen'
        WHEN city LIKE '%chicago%' THEN 'chicago'
        WHEN city LIKE '%albany%' THEN 'albany'
        WHEN city LIKE '%albuquerqu%' THEN 'albuquerque'
        WHEN city LIKE '%alexandri%' THEN 'alexandria'
        WHEN city LIKE '%anchorag%' THEN 'anchorage' 
        WHEN city LIKE '%ann arbor%' then 'ann arbor'
        WHEN city LIKE '%atlanta%' THEN 'atlanta'
        WHEN city LIKE '%austin%' THEN 'austin'
        WHEN city LIKE '%baltimore%' THEN 'baltimore' 
        WHEN city LIKE '%boston%' THEN 'boston'
        WHEN city LIKE '%calgary%' THEN 'calgary'
        WHEN city LIKE '%charlotte%' THEN 'charlotte'
        WHEN city LIKE '%cleveland%' THEN 'cleveland' 
        WHEN city LIKE '%coeur d%' THEN 'coeur d''alene' 
        WHEN city LIKE '%d.c%' OR LIKE 'dc %' OR LIKE 'district of %' OR LIKE '% dmv %' OR LIKE 'washington %' then 'washington, dc'
        WHEN city like '%denver%' then 'denver'
        WHEN city LIKE '%des moines%' THEN 'des moines'
        WHEN city LIKE '%detroit%' THEN 'detroit'
        WHEN city LIKE '%dfw%' THEN 'dallas'
        WHEN city LIKE '%london%' THEN 'london' 
        WHEN city LIKE '%madison%' THEN 'madison'
        WHEN city LIKE '%nashville%' THEN 'nashville'
        WHEN city LIKE '%new orleans%' THEN 'new orleans'
        WHEN city LIKE '%new york%' OR LIKE '%nyc%' OR LIKE 'ny %' THEN 'new york city'
        WHEN city LIKE '%philadelphia%' OR LIKE '%philly%' OR LIKE 'phi%' THEN 'philadelphia' 
        WHEN city LIKE '%portland%' THEN 'portland' 
        WHEN city LIKE '%sacramento%' THEN 'sacramento' 
        WHEN city LIKE '%seattle%' THEN 'seattle'
        WHEN city LIKE '%toronto%' THEN 'toronto'
        WHEN city LIKE '%vancouver%' THEN 'vancouver'
        WHEN city LIKE '%harrisburg%' THEN 'harrisburg'
        WHEN city LIKE '%houston%' THEN 'houston'
        WHEN city LIKE '%kansas cit%' THEN 'kansas city'
        WHEN city LIKE 'la' THEN 'los angeles'
        WHEN city LIKE '%los ang%' THEN 'los angeles'
        WHEN city LIKE '%manila%' THEN 'manila' 
        When city LIKE '%miami%' THEN 'miami' 
        WHEN city LIKE '%milwaukee%' THEN 'milwaukee'
        WHEN city LIKE '%minne%polis%' OR city LIKE 'twin cities%' THEN 'minneapolis' 
        WHEN city LIKE 'montr%al' THEN 'montreal' 
        WHEN city LIKE '%orlando%' THEN 'orlando' 
        WHEN city LIKE '%ottawa%' THEN 'ottawa' 
        WHEN city LIKE 'phoenix %' OR LIKE 'phx%' THEN 'phoenix'
        WHEN city LIKE 'pittsburgh %' THEN 'pittsburgh'
        WHEN city LIKE 'raleigh %' THEN 'raleigh' 
        WHEN city LIKE 'sa% fran%' OR LIKE 'sf%' THEN 'san francisco'
        WHEN city LIKE 'salt lake%' THEN 'salt lake city'
        WHEN city LIKE 'sa% mateo%' THEN 'san mateo'
        WHEN city LIKE 'san antoni%' THEN 'san antonio'
        WHEN city LIKE 'seat%' THEN 'seattle' 
        WHEN city LIKE 'san dieg%' OR LIKE 'san deigo%' THEN 'san diego'
        WHEN city LIKE 'tampa&' THEN 'tampa'
       ELSE city
    END;
